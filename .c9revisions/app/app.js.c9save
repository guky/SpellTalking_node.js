{"ts":1359731919739,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var app = require('express').createServer()\nvar io = require('socket.io').listen(app);\nvar fs = require('fs');\nvar moment = require('./moment.min.js');\n//var dbmodule = require('./db.js');\nvar usernames = {};\napp.listen(8080);\n\n// routing\napp.get('/audio', function (req, res) {\n  console.log(req);\n  res.sendfile(__dirname + '/soundmanager/vk_api.html');\n});\napp.get('/', function (req, res) {\nvar index = fs.readFileSync('index.html');\n  //res.sendfile(__dirname + '/index.html');\n  res.end(index);\n});\napp.get('/*', function (req, res) {\n  console.log(req);\n  res.sendfile(__dirname + '/'+req.params[0]);\n});\n\n\n// usernames which are currently connected to the chat\nvar usernames = {};\n\nio.sockets.on('connection', function (socket) {\n\t\n\t// when the client emits 'sendchat', this listens and executes\t\n\t//console.log(date)\n\tsocket.on('sendchat', function (data) {\n\t\t// we tell the client to execute 'updatechat' with 2 parameters\n\t\t//moment().format('DD-MM - HH:mm:ss a')\n\t\tio.sockets.emit('updatechat', usernames[socket.username].nick, data,moment().utc().add('hours', 2).format('DD.MM - HH:mm:ss'),usernames[socket.username].color);\n\t});\n\n\t// when the client emits 'adduser', this listens and executes\n\tsocket.on('adduser', function(username){\n\t\t// we store the username in the socket session for this client\n\t\tvar userc = {\n\t\t\tid: username,\n\t\t\tnick: username+'no_nick',\n\t\t\tcolor: '#F01233'\t\t\t\n\t\t};\n\t\tsocket.username = username;\n\t\t// add the client's username to the global list\n\t\tusernames[username] = userc;\n\t\t// echo to client they've connected\n\t\tsocket.emit('updatechat', 'SERVER','you have connected',moment().utc().add('hours', 2).format('DD.MM - HH:mm:ss'),'#cc9900');\t\t\n\t\t// echo globally (all clients) that a person has connected\n\t\tsocket.broadcast.emit('updatechat', 'SERVER',username + ' has connected',moment().utc().add('hours', 2).format('DD.MM - HH:mm:ss'),'#cc9900');\n\t\t// update the list of users in chat, client-side\n\t\tio.sockets.emit('updateusers', usernames);\n\t});\n\n\t// when the user disconnects.. perform this\n\tsocket.on('disconnect', function(){\n\t\t// remove the username from global usernames list\n\t\tdelete usernames[socket.username];\n\t\t// update list of users in chat, client-side\n\t\tio.sockets.emit('updateusers', usernames);\n\t\t// echo globally that this client has left\n\t\tsocket.broadcast.emit('updatechat', 'SERVER',socket.username + ' has disconnected',moment().utc().add('hours', 2).format('DD.MM - HH:mm:ss'),'#cc9900');\t\t\n\t});\n\tsocket.on('setnick', function(data){\n\t\t// remove the username from global usernames list\n\t\tvar oldnick = usernames[socket.username].nick;\n\t\tusernames[socket.username].nick = data\n\t\t// update list of users in chat, client-side\n\t\tsocket.broadcast.emit('updateuser','nick', usernames[socket.username]);\t\n\t\tsocket.emit('updatechat', 'SERVER','you have changed nick to '+usernames[socket.username].nick,moment().utc().add('hours', 2).format('DD.MM - HH:mm:ss'),'#cc9900');\t\n\t\tsocket.broadcast.emit('updatechat', 'SERVER', oldnick + ' has changed nick to ' + usernames[socket.username].nick,moment().utc().add('hours', 2).format('DD.MM - HH:mm:ss'),'#cc9900');\n\t});\n\tsocket.on('setcolor', function(data){\n\t\t// remove the username from global usernames list\n\t\tvar oldcolor = usernames[socket.username].color;\n\t\tusernames[socket.username].color = data\n\t\t// update list of users in chat, client-side\n\t\tsocket.broadcast.emit('updateuser','color', usernames[socket.username]);\n\t\tsocket.emit('updatechat', 'SERVER','you have changed color to '+data,moment().utc().add('hours', 2).format('DD.MM - HH:mm:ss'),'#cc9900');\t\t\t\n\t\tsocket.broadcast.emit('updatechat', 'SERVER', usernames[socket.username].nick+ ' has changed color to '+data,moment().utc().add('hours', 2).format('DD.MM - HH:mm:ss'),'#cc9900');\n\t});\n});"]],"start1":0,"start2":0,"length1":0,"length2":3761}]],"length":3761}
{"contributors":[],"silentsave":false,"ts":1359732070512,"patch":[[{"diffs":[[0,".nick = data"],[1,";"],[0,"\n\t\t// update"]],"start1":2628,"start2":2628,"length1":24,"length2":25},{"diffs":[[0,"t\n\t\t"],[-1,"var oldcolor = usernames[socket.username].color;"],[0,"\n\t\tu"]],"start1":3212,"start2":3212,"length1":56,"length2":8},{"diffs":[[0,"r = data"],[1,";"],[0,"\n\t\t// up"]],"start1":3250,"start2":3250,"length1":16,"length2":17}]],"length":3715,"saved":false}
{"contributors":[],"silentsave":false,"ts":1359800262080,"patch":[[{"diffs":[[0," = {};\n\n"],[1,"\n"],[0,"io.socke"]],"start1":682,"start2":682,"length1":16,"length2":17},{"diffs":[[0,".nick = data"],[-1,";"],[0,"\n\t\t// update"]],"start1":2629,"start2":2629,"length1":25,"length2":24},{"diffs":[[0," list\n\t\t"],[1,"var oldcolor = usernames[socket.username].color;"],[0,"\n\t\tusern"]],"start1":3208,"start2":3208,"length1":16,"length2":64},{"diffs":[[0,"r = data"],[-1,";"],[0,"\n\t\t// up"]],"start1":3298,"start2":3298,"length1":17,"length2":16}]],"length":3762,"saved":false}
